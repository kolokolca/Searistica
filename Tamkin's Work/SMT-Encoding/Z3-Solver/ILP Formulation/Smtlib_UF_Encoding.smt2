; QF_UFLIA_Benchmark
(set-info :status unknown)
(set-logic QF_UFLIA)
(declare-fun e5_6 () Int)
(declare-fun u_6 () Int)
(declare-fun u_5 () Int)
(declare-fun e5_4 () Int)
(declare-fun u_4 () Int)
(declare-fun e5_3 () Int)
(declare-fun u_3 () Int)
(declare-fun e5_2 () Int)
(declare-fun u_2 () Int)
(declare-fun e5_1 () Int)
(declare-fun u_1 () Int)
(declare-fun e4_6 () Int)
(declare-fun e4_5 () Int)
(declare-fun e4_3 () Int)
(declare-fun e4_2 () Int)
(declare-fun e4_1 () Int)
(declare-fun e3_6 () Int)
(declare-fun e3_5 () Int)
(declare-fun e3_4 () Int)
(declare-fun e3_2 () Int)
(declare-fun e3_1 () Int)
(declare-fun e2_6 () Int)
(declare-fun e2_5 () Int)
(declare-fun e2_4 () Int)
(declare-fun e2_3 () Int)
(declare-fun e2_1 () Int)
(declare-fun e1_6 () Int)
(declare-fun e1_5 () Int)
(declare-fun e1_4 () Int)
(declare-fun e1_3 () Int)
(declare-fun e1_2 () Int)
(declare-fun e6_5 () Int)
(declare-fun e6_4 () Int)
(declare-fun e6_3 () Int)
(declare-fun e6_2 () Int)
(declare-fun e6_1 () Int)
(assert
(let (($x301 (<= (+ (- u_5 u_6) (* 6 e5_6)) 5)))
(let (($x297 (<= (+ (- u_5 u_4) (* 6 e5_4)) 5)))
(let (($x293 (<= (+ (- u_5 u_3) (* 6 e5_3)) 5)))
(let (($x289 (<= (+ (- u_5 u_2) (* 6 e5_2)) 5)))
(let (($x285 (<= (+ (- u_5 u_1) (* 6 e5_1)) 5)))
(let (($x281 (<= (+ (- u_4 u_6) (* 6 e4_6)) 5)))
(let (($x277 (<= (+ (- u_4 u_5) (* 6 e4_5)) 5)))
(let (($x273 (<= (+ (- u_4 u_3) (* 6 e4_3)) 5)))
(let (($x269 (<= (+ (- u_4 u_2) (* 6 e4_2)) 5)))
(let (($x266 (<= (+ (- u_4 u_1) (* 6 e4_1)) 5)))
(let (($x262 (<= (+ (- u_3 u_6) (* 6 e3_6)) 5)))
(let (($x258 (<= (+ (- u_3 u_5) (* 6 e3_5)) 5)))
(let (($x254 (<= (+ (- u_3 u_4) (* 6 e3_4)) 5)))
(let (($x250 (<= (+ (- u_3 u_2) (* 6 e3_2)) 5)))
(let (($x246 (<= (+ (- u_3 u_1) (* 6 e3_1)) 5)))
(let (($x243 (<= (+ (- u_2 u_6) (* 6 e2_6)) 5)))
(let (($x239 (<= (+ (- u_2 u_5) (* 6 e2_5)) 5)))
(let (($x235 (<= (+ (- u_2 u_4) (* 6 e2_4)) 5)))
(let (($x231 (<= (+ (- u_2 u_3) (* 6 e2_3)) 5)))
(let (($x227 (<= (+ (- u_2 u_1) (* 6 e2_1)) 5)))
(let (($x223 (<= (+ (- u_1 u_6) (* 6 e1_6)) 5)))
(let (($x218 (<= (+ (- u_1 u_5) (* 6 e1_5)) 5)))
(let (($x213 (<= (+ (- u_1 u_4) (* 6 e1_4)) 5)))
(let (($x208 (<= (+ (- u_1 u_3) (* 6 e1_3)) 5)))
(let (($x204 (<= (+ (- u_1 u_2) (* 6 e1_2)) 5)))
(let (($x198 (= (+ e6_1 e6_2 e6_3 e6_4 e6_5) 1)))
(let (($x196 (= (+ e5_1 e5_2 e5_3 e5_4 e5_6) 1)))
(let (($x194 (= (+ e4_1 e4_2 e4_3 e4_5 e4_6) 1)))
(let (($x192 (= (+ e3_1 e3_2 e3_4 e3_5 e3_6) 1)))
(let (($x190 (= (+ e2_1 e2_3 e2_4 e2_5 e2_6) 1)))
(let (($x188 (= (+ e1_2 e1_3 e1_4 e1_5 e1_6) 1)))
(let (($x186 (= (+ e1_6 e2_6 e3_6 e4_6 e5_6) 1)))
(let (($x184 (= (+ e1_5 e2_5 e3_5 e4_5 e6_5) 1)))
(let (($x182 (= (+ e1_4 e2_4 e3_4 e5_4 e6_4) 1)))
(let (($x180 (= (+ e1_3 e2_3 e4_3 e5_3 e6_3) 1)))
(let (($x178 (= (+ e1_2 e3_2 e4_2 e5_2 e6_2) 1)))
(let (($x176 (= (+ e2_1 e3_1 e4_1 e5_1 e6_1) 1)))
(let ((?x154 (* 6 e4_2)))
(let ((?x145 (* 6 e3_1)))
(let ((?x130 (* 6 e1_3)))
(let ((?x172 (+ (* 12 e1_2) ?x130 (* 5 e1_4) (* 14 e1_5) (* 11 e1_6) (* 15 e2_1) (* 9 e2_3) (* 13 e2_4) (* 14 e2_5) (* 12 e2_6) ?x145 (* 17 e3_2) (* 18 e3_4) (* 17 e3_5) (* 13 e3_6) (* 7 e4_1) ?x154 (* 15 e4_3) (* 16 e4_5) (* 8 e4_6) (* 8 e5_1) (* 19 e5_2) (* 7 e5_3) (* 7 e5_4) (* 16 e5_6) (* 8 e6_1) (* 20 e6_2) (* 20 e6_3) (* 17 e6_4) (* 7 e6_5))))
(let (($x174 (<= ?x172 80)))
(let (($x126 (or (= e6_5 0) (= e6_5 1))))
(let (($x122 (or (= e6_4 0) (= e6_4 1))))
(let (($x118 (or (= e6_3 0) (= e6_3 1))))
(let (($x114 (or (= e6_2 0) (= e6_2 1))))
(let (($x110 (or (= e6_1 0) (= e6_1 1))))
(let (($x106 (or (= e5_6 0) (= e5_6 1))))
(let (($x102 (or (= e5_4 0) (= e5_4 1))))
(let (($x98 (or (= e5_3 0) (= e5_3 1))))
(let (($x94 (or (= e5_2 0) (= e5_2 1))))
(let (($x90 (or (= e5_1 0) (= e5_1 1))))
(let (($x86 (or (= e4_6 0) (= e4_6 1))))
(let (($x82 (or (= e4_5 0) (= e4_5 1))))
(let (($x78 (or (= e4_3 0) (= e4_3 1))))
(let (($x74 (or (= e4_2 0) (= e4_2 1))))
(let (($x70 (or (= e4_1 0) (= e4_1 1))))
(let (($x66 (or (= e3_6 0) (= e3_6 1))))
(let (($x62 (or (= e3_5 0) (= e3_5 1))))
(let (($x58 (or (= e3_4 0) (= e3_4 1))))
(let (($x54 (or (= e3_2 0) (= e3_2 1))))
(let (($x50 (or (= e3_1 0) (= e3_1 1))))
(let (($x46 (or (= e2_6 0) (= e2_6 1))))
(let (($x42 (or (= e2_5 0) (= e2_5 1))))
(let (($x38 (or (= e2_4 0) (= e2_4 1))))
(let (($x34 (or (= e2_3 0) (= e2_3 1))))
(let (($x30 (or (= e2_1 0) (= e2_1 1))))
(let (($x26 (or (= e1_6 0) (= e1_6 1))))
(let (($x22 (or (= e1_5 0) (= e1_5 1))))
(let (($x18 (or (= e1_4 0) (= e1_4 1))))
(let (($x14 (or (= e1_3 0) (= e1_3 1))))
(let (($x10 (or (= e1_2 0) (= e1_2 1))))
(and $x10 $x14 $x18 $x22 $x26 $x30 $x34 $x38 $x42 $x46 $x50 $x54 $x58 $x62 $x66 $x70 $x74 $x78 $x82 $x86 $x90 $x94 $x98 $x102 $x106 $x110 $x114 $x118 $x122 $x126 $x174 $x176 $x178 $x180 $x182 $x184 $x186 true $x188 $x190 $x192 $x194 $x196 $x198 $x204 $x208 $x213 $x218 $x223 true $x227 $x231 $x235 $x239 $x243 true $x246 $x250 $x254 $x258 $x262 true $x266 $x269 $x273 $x277 $x281 true $x285 $x289 $x293 $x297 $x301 true))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
