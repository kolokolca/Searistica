//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("byteknightModel", "FK_SubmittedProblem_Problem", "Problem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccess.Problem), "SubmittedProblem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccess.SubmittedProblem), true)]
[assembly: EdmRelationshipAttribute("byteknightModel", "FK_TeamProblemSolutionKey_Problem", "Problem", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DataAccess.Problem), "TeamProblemSolutionKey", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccess.TeamProblemSolutionKey), true)]
[assembly: EdmRelationshipAttribute("byteknightModel", "FK_SubmittedProblem_Team", "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccess.Team), "SubmittedProblem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccess.SubmittedProblem), true)]
[assembly: EdmRelationshipAttribute("byteknightModel", "FK_TeamProblemSolutionKey_Team", "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataAccess.Team), "TeamProblemSolutionKey", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataAccess.TeamProblemSolutionKey), true)]

#endregion

namespace DataAccess
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ByteKnightContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ByteKnightContext object using the connection string found in the 'ByteKnightContext' section of the application configuration file.
        /// </summary>
        public ByteKnightContext() : base("name=ByteKnightContext", "ByteKnightContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ByteKnightContext object.
        /// </summary>
        public ByteKnightContext(string connectionString) : base(connectionString, "ByteKnightContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ByteKnightContext object.
        /// </summary>
        public ByteKnightContext(EntityConnection connection) : base(connection, "ByteKnightContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SubmittedProblem> SubmittedProblems
        {
            get
            {
                if ((_SubmittedProblems == null))
                {
                    _SubmittedProblems = base.CreateObjectSet<SubmittedProblem>("SubmittedProblems");
                }
                return _SubmittedProblems;
            }
        }
        private ObjectSet<SubmittedProblem> _SubmittedProblems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Problem> Problems
        {
            get
            {
                if ((_Problems == null))
                {
                    _Problems = base.CreateObjectSet<Problem>("Problems");
                }
                return _Problems;
            }
        }
        private ObjectSet<Problem> _Problems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TeamProblemSolutionKey> TeamProblemSolutionKeys
        {
            get
            {
                if ((_TeamProblemSolutionKeys == null))
                {
                    _TeamProblemSolutionKeys = base.CreateObjectSet<TeamProblemSolutionKey>("TeamProblemSolutionKeys");
                }
                return _TeamProblemSolutionKeys;
            }
        }
        private ObjectSet<TeamProblemSolutionKey> _TeamProblemSolutionKeys;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Team> Teams
        {
            get
            {
                if ((_Teams == null))
                {
                    _Teams = base.CreateObjectSet<Team>("Teams");
                }
                return _Teams;
            }
        }
        private ObjectSet<Team> _Teams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DFOdata> DFOdatas
        {
            get
            {
                if ((_DFOdatas == null))
                {
                    _DFOdatas = base.CreateObjectSet<DFOdata>("DFOdatas");
                }
                return _DFOdatas;
            }
        }
        private ObjectSet<DFOdata> _DFOdatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Cell> Cells
        {
            get
            {
                if ((_Cells == null))
                {
                    _Cells = base.CreateObjectSet<Cell>("Cells");
                }
                return _Cells;
            }
        }
        private ObjectSet<Cell> _Cells;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SubmittedProblems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubmittedProblems(SubmittedProblem submittedProblem)
        {
            base.AddObject("SubmittedProblems", submittedProblem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Problems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProblems(Problem problem)
        {
            base.AddObject("Problems", problem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TeamProblemSolutionKeys EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeamProblemSolutionKeys(TeamProblemSolutionKey teamProblemSolutionKey)
        {
            base.AddObject("TeamProblemSolutionKeys", teamProblemSolutionKey);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Teams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeams(Team team)
        {
            base.AddObject("Teams", team);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DFOdatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDFOdatas(DFOdata dFOdata)
        {
            base.AddObject("DFOdatas", dFOdata);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Cells EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCells(Cell cell)
        {
            base.AddObject("Cells", cell);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="byteknightModel", Name="Cell")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Cell : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Cell object.
        /// </summary>
        /// <param name="x">Initial value of the X property.</param>
        /// <param name="y">Initial value of the Y property.</param>
        /// <param name="u">Initial value of the U property.</param>
        /// <param name="v">Initial value of the V property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        public static Cell CreateCell(global::System.Int32 x, global::System.Int32 y, global::System.Double u, global::System.Double v, global::System.Int32 id)
        {
            Cell cell = new Cell();
            cell.X = x;
            cell.Y = y;
            cell.U = u;
            cell.V = v;
            cell.Id = id;
            return cell;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 X
        {
            get
            {
                return _X;
            }
            set
            {
                if (_X != value)
                {
                    OnXChanging(value);
                    ReportPropertyChanging("X");
                    _X = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("X");
                    OnXChanged();
                }
            }
        }
        private global::System.Int32 _X;
        partial void OnXChanging(global::System.Int32 value);
        partial void OnXChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Y
        {
            get
            {
                return _Y;
            }
            set
            {
                if (_Y != value)
                {
                    OnYChanging(value);
                    ReportPropertyChanging("Y");
                    _Y = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Y");
                    OnYChanged();
                }
            }
        }
        private global::System.Int32 _Y;
        partial void OnYChanging(global::System.Int32 value);
        partial void OnYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double U
        {
            get
            {
                return _U;
            }
            set
            {
                if (_U != value)
                {
                    OnUChanging(value);
                    ReportPropertyChanging("U");
                    _U = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("U");
                    OnUChanged();
                }
            }
        }
        private global::System.Double _U;
        partial void OnUChanging(global::System.Double value);
        partial void OnUChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double V
        {
            get
            {
                return _V;
            }
            set
            {
                if (_V != value)
                {
                    OnVChanging(value);
                    ReportPropertyChanging("V");
                    _V = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("V");
                    OnVChanged();
                }
            }
        }
        private global::System.Double _V;
        partial void OnVChanging(global::System.Double value);
        partial void OnVChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="byteknightModel", Name="DFOdata")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DFOdata : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DFOdata object.
        /// </summary>
        /// <param name="x">Initial value of the X property.</param>
        /// <param name="y">Initial value of the Y property.</param>
        /// <param name="u">Initial value of the U property.</param>
        /// <param name="v">Initial value of the V property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        public static DFOdata CreateDFOdata(global::System.Double x, global::System.Double y, global::System.Double u, global::System.Double v, global::System.Int32 id)
        {
            DFOdata dFOdata = new DFOdata();
            dFOdata.X = x;
            dFOdata.Y = y;
            dFOdata.U = u;
            dFOdata.V = v;
            dFOdata.Id = id;
            return dFOdata;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double X
        {
            get
            {
                return _X;
            }
            set
            {
                OnXChanging(value);
                ReportPropertyChanging("X");
                _X = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("X");
                OnXChanged();
            }
        }
        private global::System.Double _X;
        partial void OnXChanging(global::System.Double value);
        partial void OnXChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Y
        {
            get
            {
                return _Y;
            }
            set
            {
                OnYChanging(value);
                ReportPropertyChanging("Y");
                _Y = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Y");
                OnYChanged();
            }
        }
        private global::System.Double _Y;
        partial void OnYChanging(global::System.Double value);
        partial void OnYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double U
        {
            get
            {
                return _U;
            }
            set
            {
                OnUChanging(value);
                ReportPropertyChanging("U");
                _U = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("U");
                OnUChanged();
            }
        }
        private global::System.Double _U;
        partial void OnUChanging(global::System.Double value);
        partial void OnUChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double V
        {
            get
            {
                return _V;
            }
            set
            {
                OnVChanging(value);
                ReportPropertyChanging("V");
                _V = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V");
                OnVChanged();
            }
        }
        private global::System.Double _V;
        partial void OnVChanging(global::System.Double value);
        partial void OnVChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="byteknightModel", Name="Problem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Problem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Problem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Problem CreateProblem(global::System.Int32 id, global::System.String name)
        {
            Problem problem = new Problem();
            problem.Id = id;
            problem.Name = name;
            return problem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Point
        {
            get
            {
                return _Point;
            }
            set
            {
                OnPointChanging(value);
                ReportPropertyChanging("Point");
                _Point = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Point");
                OnPointChanged();
            }
        }
        private Nullable<global::System.Int32> _Point;
        partial void OnPointChanging(Nullable<global::System.Int32> value);
        partial void OnPointChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("byteknightModel", "FK_SubmittedProblem_Problem", "SubmittedProblem")]
        public EntityCollection<SubmittedProblem> SubmittedProblems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubmittedProblem>("byteknightModel.FK_SubmittedProblem_Problem", "SubmittedProblem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubmittedProblem>("byteknightModel.FK_SubmittedProblem_Problem", "SubmittedProblem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("byteknightModel", "FK_TeamProblemSolutionKey_Problem", "TeamProblemSolutionKey")]
        public EntityCollection<TeamProblemSolutionKey> TeamProblemSolutionKeys
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeamProblemSolutionKey>("byteknightModel.FK_TeamProblemSolutionKey_Problem", "TeamProblemSolutionKey");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeamProblemSolutionKey>("byteknightModel.FK_TeamProblemSolutionKey_Problem", "TeamProblemSolutionKey", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="byteknightModel", Name="SubmittedProblem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubmittedProblem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SubmittedProblem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="teamId">Initial value of the TeamId property.</param>
        /// <param name="problemId">Initial value of the ProblemId property.</param>
        /// <param name="time">Initial value of the Time property.</param>
        public static SubmittedProblem CreateSubmittedProblem(global::System.Int32 id, global::System.Int32 teamId, global::System.Int32 problemId, global::System.DateTime time)
        {
            SubmittedProblem submittedProblem = new SubmittedProblem();
            submittedProblem.Id = id;
            submittedProblem.TeamId = teamId;
            submittedProblem.ProblemId = problemId;
            submittedProblem.Time = time;
            return submittedProblem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TeamId
        {
            get
            {
                return _TeamId;
            }
            set
            {
                OnTeamIdChanging(value);
                ReportPropertyChanging("TeamId");
                _TeamId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamId");
                OnTeamIdChanged();
            }
        }
        private global::System.Int32 _TeamId;
        partial void OnTeamIdChanging(global::System.Int32 value);
        partial void OnTeamIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProblemId
        {
            get
            {
                return _ProblemId;
            }
            set
            {
                OnProblemIdChanging(value);
                ReportPropertyChanging("ProblemId");
                _ProblemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProblemId");
                OnProblemIdChanged();
            }
        }
        private global::System.Int32 _ProblemId;
        partial void OnProblemIdChanging(global::System.Int32 value);
        partial void OnProblemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Time
        {
            get
            {
                return _Time;
            }
            set
            {
                OnTimeChanging(value);
                ReportPropertyChanging("Time");
                _Time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Time");
                OnTimeChanged();
            }
        }
        private global::System.DateTime _Time;
        partial void OnTimeChanging(global::System.DateTime value);
        partial void OnTimeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("byteknightModel", "FK_SubmittedProblem_Problem", "Problem")]
        public Problem Problem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Problem>("byteknightModel.FK_SubmittedProblem_Problem", "Problem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Problem>("byteknightModel.FK_SubmittedProblem_Problem", "Problem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Problem> ProblemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Problem>("byteknightModel.FK_SubmittedProblem_Problem", "Problem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Problem>("byteknightModel.FK_SubmittedProblem_Problem", "Problem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("byteknightModel", "FK_SubmittedProblem_Team", "Team")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("byteknightModel.FK_SubmittedProblem_Team", "Team").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("byteknightModel.FK_SubmittedProblem_Team", "Team").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("byteknightModel.FK_SubmittedProblem_Team", "Team");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("byteknightModel.FK_SubmittedProblem_Team", "Team", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="byteknightModel", Name="Team")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Team : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Team object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Team CreateTeam(global::System.Int32 id, global::System.String name)
        {
            Team team = new Team();
            team.Id = id;
            team.Name = name;
            return team;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Score
        {
            get
            {
                return _Score;
            }
            set
            {
                OnScoreChanging(value);
                ReportPropertyChanging("Score");
                _Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Score");
                OnScoreChanged();
            }
        }
        private Nullable<global::System.Int32> _Score;
        partial void OnScoreChanging(Nullable<global::System.Int32> value);
        partial void OnScoreChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("byteknightModel", "FK_SubmittedProblem_Team", "SubmittedProblem")]
        public EntityCollection<SubmittedProblem> SubmittedProblems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubmittedProblem>("byteknightModel.FK_SubmittedProblem_Team", "SubmittedProblem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubmittedProblem>("byteknightModel.FK_SubmittedProblem_Team", "SubmittedProblem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("byteknightModel", "FK_TeamProblemSolutionKey_Team", "TeamProblemSolutionKey")]
        public EntityCollection<TeamProblemSolutionKey> TeamProblemSolutionKeys
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeamProblemSolutionKey>("byteknightModel.FK_TeamProblemSolutionKey_Team", "TeamProblemSolutionKey");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeamProblemSolutionKey>("byteknightModel.FK_TeamProblemSolutionKey_Team", "TeamProblemSolutionKey", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="byteknightModel", Name="TeamProblemSolutionKey")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TeamProblemSolutionKey : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TeamProblemSolutionKey object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="teamId">Initial value of the TeamId property.</param>
        public static TeamProblemSolutionKey CreateTeamProblemSolutionKey(global::System.Int32 id, global::System.Int32 teamId)
        {
            TeamProblemSolutionKey teamProblemSolutionKey = new TeamProblemSolutionKey();
            teamProblemSolutionKey.Id = id;
            teamProblemSolutionKey.TeamId = teamId;
            return teamProblemSolutionKey;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TeamId
        {
            get
            {
                return _TeamId;
            }
            set
            {
                OnTeamIdChanging(value);
                ReportPropertyChanging("TeamId");
                _TeamId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamId");
                OnTeamIdChanged();
            }
        }
        private global::System.Int32 _TeamId;
        partial void OnTeamIdChanging(global::System.Int32 value);
        partial void OnTeamIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProblemId
        {
            get
            {
                return _ProblemId;
            }
            set
            {
                OnProblemIdChanging(value);
                ReportPropertyChanging("ProblemId");
                _ProblemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProblemId");
                OnProblemIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ProblemId;
        partial void OnProblemIdChanging(Nullable<global::System.Int32> value);
        partial void OnProblemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SolutionKey
        {
            get
            {
                return _SolutionKey;
            }
            set
            {
                OnSolutionKeyChanging(value);
                ReportPropertyChanging("SolutionKey");
                _SolutionKey = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SolutionKey");
                OnSolutionKeyChanged();
            }
        }
        private global::System.String _SolutionKey;
        partial void OnSolutionKeyChanging(global::System.String value);
        partial void OnSolutionKeyChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("byteknightModel", "FK_TeamProblemSolutionKey_Problem", "Problem")]
        public Problem Problem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Problem>("byteknightModel.FK_TeamProblemSolutionKey_Problem", "Problem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Problem>("byteknightModel.FK_TeamProblemSolutionKey_Problem", "Problem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Problem> ProblemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Problem>("byteknightModel.FK_TeamProblemSolutionKey_Problem", "Problem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Problem>("byteknightModel.FK_TeamProblemSolutionKey_Problem", "Problem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("byteknightModel", "FK_TeamProblemSolutionKey_Team", "Team")]
        public Team Team
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("byteknightModel.FK_TeamProblemSolutionKey_Team", "Team").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("byteknightModel.FK_TeamProblemSolutionKey_Team", "Team").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team> TeamReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team>("byteknightModel.FK_TeamProblemSolutionKey_Team", "Team");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team>("byteknightModel.FK_TeamProblemSolutionKey_Team", "Team", value);
                }
            }
        }

        #endregion
    }

    #endregion
    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="byteknightModel", Name="RectArea")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class RectArea : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RectArea object.
        /// </summary>
        /// <param name="maxX">Initial value of the MaxX property.</param>
        /// <param name="minX">Initial value of the MinX property.</param>
        /// <param name="maxY">Initial value of the MaxY property.</param>
        /// <param name="minY">Initial value of the MinY property.</param>
        public static RectArea CreateRectArea(global::System.Double maxX, global::System.Double minX, global::System.Double maxY, global::System.Double minY)
        {
            RectArea rectArea = new RectArea();
            rectArea.MaxX = maxX;
            rectArea.MinX = minX;
            rectArea.MaxY = maxY;
            rectArea.MinY = minY;
            return rectArea;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double MaxX
        {
            get
            {
                return _MaxX;
            }
            set
            {
                OnMaxXChanging(value);
                ReportPropertyChanging("MaxX");
                _MaxX = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxX");
                OnMaxXChanged();
            }
        }
        private global::System.Double _MaxX;
        partial void OnMaxXChanging(global::System.Double value);
        partial void OnMaxXChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double MinX
        {
            get
            {
                return _MinX;
            }
            set
            {
                OnMinXChanging(value);
                ReportPropertyChanging("MinX");
                _MinX = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MinX");
                OnMinXChanged();
            }
        }
        private global::System.Double _MinX;
        partial void OnMinXChanging(global::System.Double value);
        partial void OnMinXChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double MaxY
        {
            get
            {
                return _MaxY;
            }
            set
            {
                OnMaxYChanging(value);
                ReportPropertyChanging("MaxY");
                _MaxY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxY");
                OnMaxYChanged();
            }
        }
        private global::System.Double _MaxY;
        partial void OnMaxYChanging(global::System.Double value);
        partial void OnMaxYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double MinY
        {
            get
            {
                return _MinY;
            }
            set
            {
                OnMinYChanging(value);
                ReportPropertyChanging("MinY");
                _MinY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MinY");
                OnMinYChanged();
            }
        }
        private global::System.Double _MinY;
        partial void OnMinYChanging(global::System.Double value);
        partial void OnMinYChanged();

        #endregion
    }

    #endregion
    
}
